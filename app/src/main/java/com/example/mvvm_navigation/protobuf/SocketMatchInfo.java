// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchInfo.proto

package com.example.mvvm_navigation.protobuf;

public final class SocketMatchInfo {
  private SocketMatchInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MatchUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:socketProtos.MatchInfo.MatchUpdate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    int getCommandValue();
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    Socket.Command getCommand();

    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    int getMatchId();

    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    int getStatus();

    /**
     * <pre>
     * 實際開球時間(timestamp)
     * </pre>
     *
     * <code>int32 startTime = 4;</code>
     */
    int getStartTime();

    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 5;</code>
     */
    int getHomeScore();

    /**
     * <pre>
     * 主隊半場得分
     * </pre>
     *
     * <code>int32 homeHalfTime = 6;</code>
     */
    int getHomeHalfTime();

    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 7;</code>
     */
    int getHomeRedCard();

    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 8;</code>
     */
    int getHomeYellowCard();

    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 9;</code>
     */
    int getHomeCorner();

    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 10;</code>
     */
    int getAwayScore();

    /**
     * <pre>
     * 客隊半場得分
     * </pre>
     *
     * <code>int32 awayHalfTime = 11;</code>
     */
    int getAwayHalfTime();

    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 12;</code>
     */
    int getAwayRedCard();

    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 13;</code>
     */
    int getAwayYellowCard();

    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 14;</code>
     */
    int getAwayCorner();

    /**
     * <pre>
     * 動畫連結
     * </pre>
     *
     * <code>string animation = 15;</code>
     */
    String getAnimation();
    /**
     * <pre>
     * 動畫連結
     * </pre>
     *
     * <code>string animation = 15;</code>
     */
    com.google.protobuf.ByteString
        getAnimationBytes();

    /**
     * <pre>
     * 視頻連結
     * </pre>
     *
     * <code>string liveStreaming = 16;</code>
     */
    String getLiveStreaming();
    /**
     * <pre>
     * 視頻連結
     * </pre>
     *
     * <code>string liveStreaming = 16;</code>
     */
    com.google.protobuf.ByteString
        getLiveStreamingBytes();
  }
  /**
   * Protobuf type {@code socketProtos.MatchInfo.MatchUpdate}
   */
  public  static final class MatchUpdate extends
      com.google.protobuf.GeneratedMessageLite<
          MatchUpdate, MatchUpdate.Builder> implements
      // @@protoc_insertion_point(message_implements:socketProtos.MatchInfo.MatchUpdate)
      MatchUpdateOrBuilder {
    private MatchUpdate() {
      animation_ = "";
      liveStreaming_ = "";
    }
    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_;
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public int getCommandValue() {
      return command_;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public Socket.Command getCommand() {
      Socket.Command result = Socket.Command.forNumber(command_);
      return result == null ? Socket.Command.UNRECOGNIZED : result;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommandValue(int value) {
        command_ = value;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommand(Socket.Command value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      command_ = value.getNumber();
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void clearCommand() {
      
      command_ = 0;
    }

    public static final int MATCHID_FIELD_NUMBER = 2;
    private int matchId_;
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    @Override
    public int getMatchId() {
      return matchId_;
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    private void setMatchId(int value) {
      
      matchId_ = value;
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    private void clearMatchId() {
      
      matchId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    @Override
    public int getStatus() {
      return status_;
    }
    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    private void setStatus(int value) {
      
      status_ = value;
    }
    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    private void clearStatus() {
      
      status_ = 0;
    }

    public static final int STARTTIME_FIELD_NUMBER = 4;
    private int startTime_;
    /**
     * <pre>
     * 實際開球時間(timestamp)
     * </pre>
     *
     * <code>int32 startTime = 4;</code>
     */
    @Override
    public int getStartTime() {
      return startTime_;
    }
    /**
     * <pre>
     * 實際開球時間(timestamp)
     * </pre>
     *
     * <code>int32 startTime = 4;</code>
     */
    private void setStartTime(int value) {
      
      startTime_ = value;
    }
    /**
     * <pre>
     * 實際開球時間(timestamp)
     * </pre>
     *
     * <code>int32 startTime = 4;</code>
     */
    private void clearStartTime() {
      
      startTime_ = 0;
    }

    public static final int HOMESCORE_FIELD_NUMBER = 5;
    private int homeScore_;
    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 5;</code>
     */
    @Override
    public int getHomeScore() {
      return homeScore_;
    }
    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 5;</code>
     */
    private void setHomeScore(int value) {
      
      homeScore_ = value;
    }
    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 5;</code>
     */
    private void clearHomeScore() {
      
      homeScore_ = 0;
    }

    public static final int HOMEHALFTIME_FIELD_NUMBER = 6;
    private int homeHalfTime_;
    /**
     * <pre>
     * 主隊半場得分
     * </pre>
     *
     * <code>int32 homeHalfTime = 6;</code>
     */
    @Override
    public int getHomeHalfTime() {
      return homeHalfTime_;
    }
    /**
     * <pre>
     * 主隊半場得分
     * </pre>
     *
     * <code>int32 homeHalfTime = 6;</code>
     */
    private void setHomeHalfTime(int value) {
      
      homeHalfTime_ = value;
    }
    /**
     * <pre>
     * 主隊半場得分
     * </pre>
     *
     * <code>int32 homeHalfTime = 6;</code>
     */
    private void clearHomeHalfTime() {
      
      homeHalfTime_ = 0;
    }

    public static final int HOMEREDCARD_FIELD_NUMBER = 7;
    private int homeRedCard_;
    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 7;</code>
     */
    @Override
    public int getHomeRedCard() {
      return homeRedCard_;
    }
    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 7;</code>
     */
    private void setHomeRedCard(int value) {
      
      homeRedCard_ = value;
    }
    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 7;</code>
     */
    private void clearHomeRedCard() {
      
      homeRedCard_ = 0;
    }

    public static final int HOMEYELLOWCARD_FIELD_NUMBER = 8;
    private int homeYellowCard_;
    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 8;</code>
     */
    @Override
    public int getHomeYellowCard() {
      return homeYellowCard_;
    }
    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 8;</code>
     */
    private void setHomeYellowCard(int value) {
      
      homeYellowCard_ = value;
    }
    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 8;</code>
     */
    private void clearHomeYellowCard() {
      
      homeYellowCard_ = 0;
    }

    public static final int HOMECORNER_FIELD_NUMBER = 9;
    private int homeCorner_;
    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 9;</code>
     */
    @Override
    public int getHomeCorner() {
      return homeCorner_;
    }
    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 9;</code>
     */
    private void setHomeCorner(int value) {
      
      homeCorner_ = value;
    }
    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 9;</code>
     */
    private void clearHomeCorner() {
      
      homeCorner_ = 0;
    }

    public static final int AWAYSCORE_FIELD_NUMBER = 10;
    private int awayScore_;
    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 10;</code>
     */
    @Override
    public int getAwayScore() {
      return awayScore_;
    }
    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 10;</code>
     */
    private void setAwayScore(int value) {
      
      awayScore_ = value;
    }
    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 10;</code>
     */
    private void clearAwayScore() {
      
      awayScore_ = 0;
    }

    public static final int AWAYHALFTIME_FIELD_NUMBER = 11;
    private int awayHalfTime_;
    /**
     * <pre>
     * 客隊半場得分
     * </pre>
     *
     * <code>int32 awayHalfTime = 11;</code>
     */
    @Override
    public int getAwayHalfTime() {
      return awayHalfTime_;
    }
    /**
     * <pre>
     * 客隊半場得分
     * </pre>
     *
     * <code>int32 awayHalfTime = 11;</code>
     */
    private void setAwayHalfTime(int value) {
      
      awayHalfTime_ = value;
    }
    /**
     * <pre>
     * 客隊半場得分
     * </pre>
     *
     * <code>int32 awayHalfTime = 11;</code>
     */
    private void clearAwayHalfTime() {
      
      awayHalfTime_ = 0;
    }

    public static final int AWAYREDCARD_FIELD_NUMBER = 12;
    private int awayRedCard_;
    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 12;</code>
     */
    @Override
    public int getAwayRedCard() {
      return awayRedCard_;
    }
    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 12;</code>
     */
    private void setAwayRedCard(int value) {
      
      awayRedCard_ = value;
    }
    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 12;</code>
     */
    private void clearAwayRedCard() {
      
      awayRedCard_ = 0;
    }

    public static final int AWAYYELLOWCARD_FIELD_NUMBER = 13;
    private int awayYellowCard_;
    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 13;</code>
     */
    @Override
    public int getAwayYellowCard() {
      return awayYellowCard_;
    }
    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 13;</code>
     */
    private void setAwayYellowCard(int value) {
      
      awayYellowCard_ = value;
    }
    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 13;</code>
     */
    private void clearAwayYellowCard() {
      
      awayYellowCard_ = 0;
    }

    public static final int AWAYCORNER_FIELD_NUMBER = 14;
    private int awayCorner_;
    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 14;</code>
     */
    @Override
    public int getAwayCorner() {
      return awayCorner_;
    }
    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 14;</code>
     */
    private void setAwayCorner(int value) {
      
      awayCorner_ = value;
    }
    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 14;</code>
     */
    private void clearAwayCorner() {
      
      awayCorner_ = 0;
    }

    public static final int ANIMATION_FIELD_NUMBER = 15;
    private String animation_;
    /**
     * <pre>
     * 動畫連結
     * </pre>
     *
     * <code>string animation = 15;</code>
     */
    @Override
    public String getAnimation() {
      return animation_;
    }
    /**
     * <pre>
     * 動畫連結
     * </pre>
     *
     * <code>string animation = 15;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getAnimationBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(animation_);
    }
    /**
     * <pre>
     * 動畫連結
     * </pre>
     *
     * <code>string animation = 15;</code>
     */
    private void setAnimation(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      animation_ = value;
    }
    /**
     * <pre>
     * 動畫連結
     * </pre>
     *
     * <code>string animation = 15;</code>
     */
    private void clearAnimation() {
      
      animation_ = getDefaultInstance().getAnimation();
    }
    /**
     * <pre>
     * 動畫連結
     * </pre>
     *
     * <code>string animation = 15;</code>
     */
    private void setAnimationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      animation_ = value.toStringUtf8();
    }

    public static final int LIVESTREAMING_FIELD_NUMBER = 16;
    private String liveStreaming_;
    /**
     * <pre>
     * 視頻連結
     * </pre>
     *
     * <code>string liveStreaming = 16;</code>
     */
    @Override
    public String getLiveStreaming() {
      return liveStreaming_;
    }
    /**
     * <pre>
     * 視頻連結
     * </pre>
     *
     * <code>string liveStreaming = 16;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getLiveStreamingBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(liveStreaming_);
    }
    /**
     * <pre>
     * 視頻連結
     * </pre>
     *
     * <code>string liveStreaming = 16;</code>
     */
    private void setLiveStreaming(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      liveStreaming_ = value;
    }
    /**
     * <pre>
     * 視頻連結
     * </pre>
     *
     * <code>string liveStreaming = 16;</code>
     */
    private void clearLiveStreaming() {
      
      liveStreaming_ = getDefaultInstance().getLiveStreaming();
    }
    /**
     * <pre>
     * 視頻連結
     * </pre>
     *
     * <code>string liveStreaming = 16;</code>
     */
    private void setLiveStreamingBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      liveStreaming_ = value.toStringUtf8();
    }

    public static MatchUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MatchUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MatchUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MatchUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MatchUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MatchUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MatchUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MatchUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MatchUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MatchUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MatchUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MatchUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MatchUpdate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code socketProtos.MatchInfo.MatchUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MatchUpdate, Builder> implements
        // @@protoc_insertion_point(builder_implements:socketProtos.MatchInfo.MatchUpdate)
        MatchUpdateOrBuilder {
      // Construct using com.example.mvvm_navigation.protobuf.SocketMatchInfo.MatchUpdate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public int getCommandValue() {
        return instance.getCommandValue();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommandValue(int value) {
        copyOnWrite();
        instance.setCommandValue(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public Socket.Command getCommand() {
        return instance.getCommand();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommand(Socket.Command value) {
        copyOnWrite();
        instance.setCommand(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder clearCommand() {
        copyOnWrite();
        instance.clearCommand();
        return this;
      }

      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 2;</code>
       */
      @Override
      public int getMatchId() {
        return instance.getMatchId();
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 2;</code>
       */
      public Builder setMatchId(int value) {
        copyOnWrite();
        instance.setMatchId(value);
        return this;
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 2;</code>
       */
      public Builder clearMatchId() {
        copyOnWrite();
        instance.clearMatchId();
        return this;
      }

      /**
       * <pre>
       * 賽事狀態
       * </pre>
       *
       * <code>sint32 status = 3;</code>
       */
      @Override
      public int getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       * 賽事狀態
       * </pre>
       *
       * <code>sint32 status = 3;</code>
       */
      public Builder setStatus(int value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       * 賽事狀態
       * </pre>
       *
       * <code>sint32 status = 3;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      /**
       * <pre>
       * 實際開球時間(timestamp)
       * </pre>
       *
       * <code>int32 startTime = 4;</code>
       */
      @Override
      public int getStartTime() {
        return instance.getStartTime();
      }
      /**
       * <pre>
       * 實際開球時間(timestamp)
       * </pre>
       *
       * <code>int32 startTime = 4;</code>
       */
      public Builder setStartTime(int value) {
        copyOnWrite();
        instance.setStartTime(value);
        return this;
      }
      /**
       * <pre>
       * 實際開球時間(timestamp)
       * </pre>
       *
       * <code>int32 startTime = 4;</code>
       */
      public Builder clearStartTime() {
        copyOnWrite();
        instance.clearStartTime();
        return this;
      }

      /**
       * <pre>
       * 主隊全場得分
       * </pre>
       *
       * <code>int32 homeScore = 5;</code>
       */
      @Override
      public int getHomeScore() {
        return instance.getHomeScore();
      }
      /**
       * <pre>
       * 主隊全場得分
       * </pre>
       *
       * <code>int32 homeScore = 5;</code>
       */
      public Builder setHomeScore(int value) {
        copyOnWrite();
        instance.setHomeScore(value);
        return this;
      }
      /**
       * <pre>
       * 主隊全場得分
       * </pre>
       *
       * <code>int32 homeScore = 5;</code>
       */
      public Builder clearHomeScore() {
        copyOnWrite();
        instance.clearHomeScore();
        return this;
      }

      /**
       * <pre>
       * 主隊半場得分
       * </pre>
       *
       * <code>int32 homeHalfTime = 6;</code>
       */
      @Override
      public int getHomeHalfTime() {
        return instance.getHomeHalfTime();
      }
      /**
       * <pre>
       * 主隊半場得分
       * </pre>
       *
       * <code>int32 homeHalfTime = 6;</code>
       */
      public Builder setHomeHalfTime(int value) {
        copyOnWrite();
        instance.setHomeHalfTime(value);
        return this;
      }
      /**
       * <pre>
       * 主隊半場得分
       * </pre>
       *
       * <code>int32 homeHalfTime = 6;</code>
       */
      public Builder clearHomeHalfTime() {
        copyOnWrite();
        instance.clearHomeHalfTime();
        return this;
      }

      /**
       * <pre>
       * 主隊紅牌數量
       * </pre>
       *
       * <code>int32 homeRedCard = 7;</code>
       */
      @Override
      public int getHomeRedCard() {
        return instance.getHomeRedCard();
      }
      /**
       * <pre>
       * 主隊紅牌數量
       * </pre>
       *
       * <code>int32 homeRedCard = 7;</code>
       */
      public Builder setHomeRedCard(int value) {
        copyOnWrite();
        instance.setHomeRedCard(value);
        return this;
      }
      /**
       * <pre>
       * 主隊紅牌數量
       * </pre>
       *
       * <code>int32 homeRedCard = 7;</code>
       */
      public Builder clearHomeRedCard() {
        copyOnWrite();
        instance.clearHomeRedCard();
        return this;
      }

      /**
       * <pre>
       * 主隊黃牌數量
       * </pre>
       *
       * <code>int32 homeYellowCard = 8;</code>
       */
      @Override
      public int getHomeYellowCard() {
        return instance.getHomeYellowCard();
      }
      /**
       * <pre>
       * 主隊黃牌數量
       * </pre>
       *
       * <code>int32 homeYellowCard = 8;</code>
       */
      public Builder setHomeYellowCard(int value) {
        copyOnWrite();
        instance.setHomeYellowCard(value);
        return this;
      }
      /**
       * <pre>
       * 主隊黃牌數量
       * </pre>
       *
       * <code>int32 homeYellowCard = 8;</code>
       */
      public Builder clearHomeYellowCard() {
        copyOnWrite();
        instance.clearHomeYellowCard();
        return this;
      }

      /**
       * <pre>
       * 主隊角球數量
       * </pre>
       *
       * <code>int32 homeCorner = 9;</code>
       */
      @Override
      public int getHomeCorner() {
        return instance.getHomeCorner();
      }
      /**
       * <pre>
       * 主隊角球數量
       * </pre>
       *
       * <code>int32 homeCorner = 9;</code>
       */
      public Builder setHomeCorner(int value) {
        copyOnWrite();
        instance.setHomeCorner(value);
        return this;
      }
      /**
       * <pre>
       * 主隊角球數量
       * </pre>
       *
       * <code>int32 homeCorner = 9;</code>
       */
      public Builder clearHomeCorner() {
        copyOnWrite();
        instance.clearHomeCorner();
        return this;
      }

      /**
       * <pre>
       * 客隊全場得分
       * </pre>
       *
       * <code>int32 awayScore = 10;</code>
       */
      @Override
      public int getAwayScore() {
        return instance.getAwayScore();
      }
      /**
       * <pre>
       * 客隊全場得分
       * </pre>
       *
       * <code>int32 awayScore = 10;</code>
       */
      public Builder setAwayScore(int value) {
        copyOnWrite();
        instance.setAwayScore(value);
        return this;
      }
      /**
       * <pre>
       * 客隊全場得分
       * </pre>
       *
       * <code>int32 awayScore = 10;</code>
       */
      public Builder clearAwayScore() {
        copyOnWrite();
        instance.clearAwayScore();
        return this;
      }

      /**
       * <pre>
       * 客隊半場得分
       * </pre>
       *
       * <code>int32 awayHalfTime = 11;</code>
       */
      @Override
      public int getAwayHalfTime() {
        return instance.getAwayHalfTime();
      }
      /**
       * <pre>
       * 客隊半場得分
       * </pre>
       *
       * <code>int32 awayHalfTime = 11;</code>
       */
      public Builder setAwayHalfTime(int value) {
        copyOnWrite();
        instance.setAwayHalfTime(value);
        return this;
      }
      /**
       * <pre>
       * 客隊半場得分
       * </pre>
       *
       * <code>int32 awayHalfTime = 11;</code>
       */
      public Builder clearAwayHalfTime() {
        copyOnWrite();
        instance.clearAwayHalfTime();
        return this;
      }

      /**
       * <pre>
       * 客隊紅牌數量
       * </pre>
       *
       * <code>int32 awayRedCard = 12;</code>
       */
      @Override
      public int getAwayRedCard() {
        return instance.getAwayRedCard();
      }
      /**
       * <pre>
       * 客隊紅牌數量
       * </pre>
       *
       * <code>int32 awayRedCard = 12;</code>
       */
      public Builder setAwayRedCard(int value) {
        copyOnWrite();
        instance.setAwayRedCard(value);
        return this;
      }
      /**
       * <pre>
       * 客隊紅牌數量
       * </pre>
       *
       * <code>int32 awayRedCard = 12;</code>
       */
      public Builder clearAwayRedCard() {
        copyOnWrite();
        instance.clearAwayRedCard();
        return this;
      }

      /**
       * <pre>
       * 客隊黃牌數量
       * </pre>
       *
       * <code>int32 awayYellowCard = 13;</code>
       */
      @Override
      public int getAwayYellowCard() {
        return instance.getAwayYellowCard();
      }
      /**
       * <pre>
       * 客隊黃牌數量
       * </pre>
       *
       * <code>int32 awayYellowCard = 13;</code>
       */
      public Builder setAwayYellowCard(int value) {
        copyOnWrite();
        instance.setAwayYellowCard(value);
        return this;
      }
      /**
       * <pre>
       * 客隊黃牌數量
       * </pre>
       *
       * <code>int32 awayYellowCard = 13;</code>
       */
      public Builder clearAwayYellowCard() {
        copyOnWrite();
        instance.clearAwayYellowCard();
        return this;
      }

      /**
       * <pre>
       * 客隊角球數量
       * </pre>
       *
       * <code>int32 awayCorner = 14;</code>
       */
      @Override
      public int getAwayCorner() {
        return instance.getAwayCorner();
      }
      /**
       * <pre>
       * 客隊角球數量
       * </pre>
       *
       * <code>int32 awayCorner = 14;</code>
       */
      public Builder setAwayCorner(int value) {
        copyOnWrite();
        instance.setAwayCorner(value);
        return this;
      }
      /**
       * <pre>
       * 客隊角球數量
       * </pre>
       *
       * <code>int32 awayCorner = 14;</code>
       */
      public Builder clearAwayCorner() {
        copyOnWrite();
        instance.clearAwayCorner();
        return this;
      }

      /**
       * <pre>
       * 動畫連結
       * </pre>
       *
       * <code>string animation = 15;</code>
       */
      @Override
      public String getAnimation() {
        return instance.getAnimation();
      }
      /**
       * <pre>
       * 動畫連結
       * </pre>
       *
       * <code>string animation = 15;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getAnimationBytes() {
        return instance.getAnimationBytes();
      }
      /**
       * <pre>
       * 動畫連結
       * </pre>
       *
       * <code>string animation = 15;</code>
       */
      public Builder setAnimation(
          String value) {
        copyOnWrite();
        instance.setAnimation(value);
        return this;
      }
      /**
       * <pre>
       * 動畫連結
       * </pre>
       *
       * <code>string animation = 15;</code>
       */
      public Builder clearAnimation() {
        copyOnWrite();
        instance.clearAnimation();
        return this;
      }
      /**
       * <pre>
       * 動畫連結
       * </pre>
       *
       * <code>string animation = 15;</code>
       */
      public Builder setAnimationBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAnimationBytes(value);
        return this;
      }

      /**
       * <pre>
       * 視頻連結
       * </pre>
       *
       * <code>string liveStreaming = 16;</code>
       */
      @Override
      public String getLiveStreaming() {
        return instance.getLiveStreaming();
      }
      /**
       * <pre>
       * 視頻連結
       * </pre>
       *
       * <code>string liveStreaming = 16;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getLiveStreamingBytes() {
        return instance.getLiveStreamingBytes();
      }
      /**
       * <pre>
       * 視頻連結
       * </pre>
       *
       * <code>string liveStreaming = 16;</code>
       */
      public Builder setLiveStreaming(
          String value) {
        copyOnWrite();
        instance.setLiveStreaming(value);
        return this;
      }
      /**
       * <pre>
       * 視頻連結
       * </pre>
       *
       * <code>string liveStreaming = 16;</code>
       */
      public Builder clearLiveStreaming() {
        copyOnWrite();
        instance.clearLiveStreaming();
        return this;
      }
      /**
       * <pre>
       * 視頻連結
       * </pre>
       *
       * <code>string liveStreaming = 16;</code>
       */
      public Builder setLiveStreamingBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLiveStreamingBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:socketProtos.MatchInfo.MatchUpdate)
    }
    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MatchUpdate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            Object[] objects = new Object[] {
              "command_",
              "matchId_",
              "status_",
              "startTime_",
              "homeScore_",
              "homeHalfTime_",
              "homeRedCard_",
              "homeYellowCard_",
              "homeCorner_",
              "awayScore_",
              "awayHalfTime_",
              "awayRedCard_",
              "awayYellowCard_",
              "awayCorner_",
              "animation_",
              "liveStreaming_",
            };
            String info =
                "\u0000\u0010\u0000\u0000\u0001\u0010\u0010\u0000\u0000\u0000\u0001\f\u0002\u0004" +
                "\u0003\u000f\u0004\u0004\u0005\u0004\u0006\u0004\u0007\u0004\b\u0004\t\u0004\n\u0004" +
                "\u000b\u0004\f\u0004\r\u0004\u000e\u0004\u000f\u0208\u0010\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MatchUpdate> parser = PARSER;
          if (parser == null) {
            synchronized (MatchUpdate.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:socketProtos.MatchInfo.MatchUpdate)
    private static final MatchUpdate DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new MatchUpdate();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MatchUpdate.class, DEFAULT_INSTANCE);
    }
    public static MatchUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MatchUpdate> PARSER;

    public static com.google.protobuf.Parser<MatchUpdate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GoalNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:socketProtos.MatchInfo.GoalNotify)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    int getCommandValue();
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    Socket.Command getCommand();

    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    int getMatchId();

    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    int getStatus();

    /**
     * <pre>
     * 通知事件類型 1:進球 2:紅牌 3:黃牌
     * </pre>
     *
     * <code>int32 type = 4;</code>
     */
    int getType();

    /**
     * <pre>
     * 現在比賽進行的時間
     * </pre>
     *
     * <code>int32 runtime = 5;</code>
     */
    int getRuntime();

    /**
     * <pre>
     * 通知事件方 1:主隊 2客隊
     * </pre>
     *
     * <code>int32 teamEvent = 6;</code>
     */
    int getTeamEvent();

    /**
     * <pre>
     * 主隊名稱簡中
     * </pre>
     *
     * <code>string homeName = 7;</code>
     */
    String getHomeName();
    /**
     * <pre>
     * 主隊名稱簡中
     * </pre>
     *
     * <code>string homeName = 7;</code>
     */
    com.google.protobuf.ByteString
        getHomeNameBytes();

    /**
     * <pre>
     * 主隊名稱英文
     * </pre>
     *
     * <code>string homeNameEn = 8;</code>
     */
    String getHomeNameEn();
    /**
     * <pre>
     * 主隊名稱英文
     * </pre>
     *
     * <code>string homeNameEn = 8;</code>
     */
    com.google.protobuf.ByteString
        getHomeNameEnBytes();

    /**
     * <pre>
     * 主隊名稱繁中
     * </pre>
     *
     * <code>string homeNameZht = 9;</code>
     */
    String getHomeNameZht();
    /**
     * <pre>
     * 主隊名稱繁中
     * </pre>
     *
     * <code>string homeNameZht = 9;</code>
     */
    com.google.protobuf.ByteString
        getHomeNameZhtBytes();

    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 10;</code>
     */
    int getHomeScore();

    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 11;</code>
     */
    int getHomeRedCard();

    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 12;</code>
     */
    int getHomeYellowCard();

    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 13;</code>
     */
    int getHomeCorner();

    /**
     * <pre>
     * 客隊名稱簡中
     * </pre>
     *
     * <code>string awayName = 14;</code>
     */
    String getAwayName();
    /**
     * <pre>
     * 客隊名稱簡中
     * </pre>
     *
     * <code>string awayName = 14;</code>
     */
    com.google.protobuf.ByteString
        getAwayNameBytes();

    /**
     * <pre>
     * 客隊名稱英文
     * </pre>
     *
     * <code>string awayNameEn = 15;</code>
     */
    String getAwayNameEn();
    /**
     * <pre>
     * 客隊名稱英文
     * </pre>
     *
     * <code>string awayNameEn = 15;</code>
     */
    com.google.protobuf.ByteString
        getAwayNameEnBytes();

    /**
     * <pre>
     * 客隊名稱繁中
     * </pre>
     *
     * <code>string awayNameZht = 16;</code>
     */
    String getAwayNameZht();
    /**
     * <pre>
     * 客隊名稱繁中
     * </pre>
     *
     * <code>string awayNameZht = 16;</code>
     */
    com.google.protobuf.ByteString
        getAwayNameZhtBytes();

    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 17;</code>
     */
    int getAwayScore();

    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 18;</code>
     */
    int getAwayRedCard();

    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 19;</code>
     */
    int getAwayYellowCard();

    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 20;</code>
     */
    int getAwayCorner();
  }
  /**
   * Protobuf type {@code socketProtos.MatchInfo.GoalNotify}
   */
  public  static final class GoalNotify extends
      com.google.protobuf.GeneratedMessageLite<
          GoalNotify, GoalNotify.Builder> implements
      // @@protoc_insertion_point(message_implements:socketProtos.MatchInfo.GoalNotify)
      GoalNotifyOrBuilder {
    private GoalNotify() {
      homeName_ = "";
      homeNameEn_ = "";
      homeNameZht_ = "";
      awayName_ = "";
      awayNameEn_ = "";
      awayNameZht_ = "";
    }
    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_;
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public int getCommandValue() {
      return command_;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public Socket.Command getCommand() {
      Socket.Command result = Socket.Command.forNumber(command_);
      return result == null ? Socket.Command.UNRECOGNIZED : result;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommandValue(int value) {
        command_ = value;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommand(Socket.Command value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      command_ = value.getNumber();
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void clearCommand() {
      
      command_ = 0;
    }

    public static final int MATCHID_FIELD_NUMBER = 2;
    private int matchId_;
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    @Override
    public int getMatchId() {
      return matchId_;
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    private void setMatchId(int value) {
      
      matchId_ = value;
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 2;</code>
     */
    private void clearMatchId() {
      
      matchId_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    @Override
    public int getStatus() {
      return status_;
    }
    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    private void setStatus(int value) {
      
      status_ = value;
    }
    /**
     * <pre>
     * 賽事狀態
     * </pre>
     *
     * <code>sint32 status = 3;</code>
     */
    private void clearStatus() {
      
      status_ = 0;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <pre>
     * 通知事件類型 1:進球 2:紅牌 3:黃牌
     * </pre>
     *
     * <code>int32 type = 4;</code>
     */
    @Override
    public int getType() {
      return type_;
    }
    /**
     * <pre>
     * 通知事件類型 1:進球 2:紅牌 3:黃牌
     * </pre>
     *
     * <code>int32 type = 4;</code>
     */
    private void setType(int value) {
      
      type_ = value;
    }
    /**
     * <pre>
     * 通知事件類型 1:進球 2:紅牌 3:黃牌
     * </pre>
     *
     * <code>int32 type = 4;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int RUNTIME_FIELD_NUMBER = 5;
    private int runtime_;
    /**
     * <pre>
     * 現在比賽進行的時間
     * </pre>
     *
     * <code>int32 runtime = 5;</code>
     */
    @Override
    public int getRuntime() {
      return runtime_;
    }
    /**
     * <pre>
     * 現在比賽進行的時間
     * </pre>
     *
     * <code>int32 runtime = 5;</code>
     */
    private void setRuntime(int value) {
      
      runtime_ = value;
    }
    /**
     * <pre>
     * 現在比賽進行的時間
     * </pre>
     *
     * <code>int32 runtime = 5;</code>
     */
    private void clearRuntime() {
      
      runtime_ = 0;
    }

    public static final int TEAMEVENT_FIELD_NUMBER = 6;
    private int teamEvent_;
    /**
     * <pre>
     * 通知事件方 1:主隊 2客隊
     * </pre>
     *
     * <code>int32 teamEvent = 6;</code>
     */
    @Override
    public int getTeamEvent() {
      return teamEvent_;
    }
    /**
     * <pre>
     * 通知事件方 1:主隊 2客隊
     * </pre>
     *
     * <code>int32 teamEvent = 6;</code>
     */
    private void setTeamEvent(int value) {
      
      teamEvent_ = value;
    }
    /**
     * <pre>
     * 通知事件方 1:主隊 2客隊
     * </pre>
     *
     * <code>int32 teamEvent = 6;</code>
     */
    private void clearTeamEvent() {
      
      teamEvent_ = 0;
    }

    public static final int HOMENAME_FIELD_NUMBER = 7;
    private String homeName_;
    /**
     * <pre>
     * 主隊名稱簡中
     * </pre>
     *
     * <code>string homeName = 7;</code>
     */
    @Override
    public String getHomeName() {
      return homeName_;
    }
    /**
     * <pre>
     * 主隊名稱簡中
     * </pre>
     *
     * <code>string homeName = 7;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getHomeNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(homeName_);
    }
    /**
     * <pre>
     * 主隊名稱簡中
     * </pre>
     *
     * <code>string homeName = 7;</code>
     */
    private void setHomeName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      homeName_ = value;
    }
    /**
     * <pre>
     * 主隊名稱簡中
     * </pre>
     *
     * <code>string homeName = 7;</code>
     */
    private void clearHomeName() {
      
      homeName_ = getDefaultInstance().getHomeName();
    }
    /**
     * <pre>
     * 主隊名稱簡中
     * </pre>
     *
     * <code>string homeName = 7;</code>
     */
    private void setHomeNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      homeName_ = value.toStringUtf8();
    }

    public static final int HOMENAMEEN_FIELD_NUMBER = 8;
    private String homeNameEn_;
    /**
     * <pre>
     * 主隊名稱英文
     * </pre>
     *
     * <code>string homeNameEn = 8;</code>
     */
    @Override
    public String getHomeNameEn() {
      return homeNameEn_;
    }
    /**
     * <pre>
     * 主隊名稱英文
     * </pre>
     *
     * <code>string homeNameEn = 8;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getHomeNameEnBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(homeNameEn_);
    }
    /**
     * <pre>
     * 主隊名稱英文
     * </pre>
     *
     * <code>string homeNameEn = 8;</code>
     */
    private void setHomeNameEn(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      homeNameEn_ = value;
    }
    /**
     * <pre>
     * 主隊名稱英文
     * </pre>
     *
     * <code>string homeNameEn = 8;</code>
     */
    private void clearHomeNameEn() {
      
      homeNameEn_ = getDefaultInstance().getHomeNameEn();
    }
    /**
     * <pre>
     * 主隊名稱英文
     * </pre>
     *
     * <code>string homeNameEn = 8;</code>
     */
    private void setHomeNameEnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      homeNameEn_ = value.toStringUtf8();
    }

    public static final int HOMENAMEZHT_FIELD_NUMBER = 9;
    private String homeNameZht_;
    /**
     * <pre>
     * 主隊名稱繁中
     * </pre>
     *
     * <code>string homeNameZht = 9;</code>
     */
    @Override
    public String getHomeNameZht() {
      return homeNameZht_;
    }
    /**
     * <pre>
     * 主隊名稱繁中
     * </pre>
     *
     * <code>string homeNameZht = 9;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getHomeNameZhtBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(homeNameZht_);
    }
    /**
     * <pre>
     * 主隊名稱繁中
     * </pre>
     *
     * <code>string homeNameZht = 9;</code>
     */
    private void setHomeNameZht(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      homeNameZht_ = value;
    }
    /**
     * <pre>
     * 主隊名稱繁中
     * </pre>
     *
     * <code>string homeNameZht = 9;</code>
     */
    private void clearHomeNameZht() {
      
      homeNameZht_ = getDefaultInstance().getHomeNameZht();
    }
    /**
     * <pre>
     * 主隊名稱繁中
     * </pre>
     *
     * <code>string homeNameZht = 9;</code>
     */
    private void setHomeNameZhtBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      homeNameZht_ = value.toStringUtf8();
    }

    public static final int HOMESCORE_FIELD_NUMBER = 10;
    private int homeScore_;
    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 10;</code>
     */
    @Override
    public int getHomeScore() {
      return homeScore_;
    }
    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 10;</code>
     */
    private void setHomeScore(int value) {
      
      homeScore_ = value;
    }
    /**
     * <pre>
     * 主隊全場得分
     * </pre>
     *
     * <code>int32 homeScore = 10;</code>
     */
    private void clearHomeScore() {
      
      homeScore_ = 0;
    }

    public static final int HOMEREDCARD_FIELD_NUMBER = 11;
    private int homeRedCard_;
    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 11;</code>
     */
    @Override
    public int getHomeRedCard() {
      return homeRedCard_;
    }
    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 11;</code>
     */
    private void setHomeRedCard(int value) {
      
      homeRedCard_ = value;
    }
    /**
     * <pre>
     * 主隊紅牌數量
     * </pre>
     *
     * <code>int32 homeRedCard = 11;</code>
     */
    private void clearHomeRedCard() {
      
      homeRedCard_ = 0;
    }

    public static final int HOMEYELLOWCARD_FIELD_NUMBER = 12;
    private int homeYellowCard_;
    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 12;</code>
     */
    @Override
    public int getHomeYellowCard() {
      return homeYellowCard_;
    }
    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 12;</code>
     */
    private void setHomeYellowCard(int value) {
      
      homeYellowCard_ = value;
    }
    /**
     * <pre>
     * 主隊黃牌數量
     * </pre>
     *
     * <code>int32 homeYellowCard = 12;</code>
     */
    private void clearHomeYellowCard() {
      
      homeYellowCard_ = 0;
    }

    public static final int HOMECORNER_FIELD_NUMBER = 13;
    private int homeCorner_;
    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 13;</code>
     */
    @Override
    public int getHomeCorner() {
      return homeCorner_;
    }
    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 13;</code>
     */
    private void setHomeCorner(int value) {
      
      homeCorner_ = value;
    }
    /**
     * <pre>
     * 主隊角球數量
     * </pre>
     *
     * <code>int32 homeCorner = 13;</code>
     */
    private void clearHomeCorner() {
      
      homeCorner_ = 0;
    }

    public static final int AWAYNAME_FIELD_NUMBER = 14;
    private String awayName_;
    /**
     * <pre>
     * 客隊名稱簡中
     * </pre>
     *
     * <code>string awayName = 14;</code>
     */
    @Override
    public String getAwayName() {
      return awayName_;
    }
    /**
     * <pre>
     * 客隊名稱簡中
     * </pre>
     *
     * <code>string awayName = 14;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getAwayNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(awayName_);
    }
    /**
     * <pre>
     * 客隊名稱簡中
     * </pre>
     *
     * <code>string awayName = 14;</code>
     */
    private void setAwayName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      awayName_ = value;
    }
    /**
     * <pre>
     * 客隊名稱簡中
     * </pre>
     *
     * <code>string awayName = 14;</code>
     */
    private void clearAwayName() {
      
      awayName_ = getDefaultInstance().getAwayName();
    }
    /**
     * <pre>
     * 客隊名稱簡中
     * </pre>
     *
     * <code>string awayName = 14;</code>
     */
    private void setAwayNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      awayName_ = value.toStringUtf8();
    }

    public static final int AWAYNAMEEN_FIELD_NUMBER = 15;
    private String awayNameEn_;
    /**
     * <pre>
     * 客隊名稱英文
     * </pre>
     *
     * <code>string awayNameEn = 15;</code>
     */
    @Override
    public String getAwayNameEn() {
      return awayNameEn_;
    }
    /**
     * <pre>
     * 客隊名稱英文
     * </pre>
     *
     * <code>string awayNameEn = 15;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getAwayNameEnBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(awayNameEn_);
    }
    /**
     * <pre>
     * 客隊名稱英文
     * </pre>
     *
     * <code>string awayNameEn = 15;</code>
     */
    private void setAwayNameEn(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      awayNameEn_ = value;
    }
    /**
     * <pre>
     * 客隊名稱英文
     * </pre>
     *
     * <code>string awayNameEn = 15;</code>
     */
    private void clearAwayNameEn() {
      
      awayNameEn_ = getDefaultInstance().getAwayNameEn();
    }
    /**
     * <pre>
     * 客隊名稱英文
     * </pre>
     *
     * <code>string awayNameEn = 15;</code>
     */
    private void setAwayNameEnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      awayNameEn_ = value.toStringUtf8();
    }

    public static final int AWAYNAMEZHT_FIELD_NUMBER = 16;
    private String awayNameZht_;
    /**
     * <pre>
     * 客隊名稱繁中
     * </pre>
     *
     * <code>string awayNameZht = 16;</code>
     */
    @Override
    public String getAwayNameZht() {
      return awayNameZht_;
    }
    /**
     * <pre>
     * 客隊名稱繁中
     * </pre>
     *
     * <code>string awayNameZht = 16;</code>
     */
    @Override
    public com.google.protobuf.ByteString
        getAwayNameZhtBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(awayNameZht_);
    }
    /**
     * <pre>
     * 客隊名稱繁中
     * </pre>
     *
     * <code>string awayNameZht = 16;</code>
     */
    private void setAwayNameZht(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      awayNameZht_ = value;
    }
    /**
     * <pre>
     * 客隊名稱繁中
     * </pre>
     *
     * <code>string awayNameZht = 16;</code>
     */
    private void clearAwayNameZht() {
      
      awayNameZht_ = getDefaultInstance().getAwayNameZht();
    }
    /**
     * <pre>
     * 客隊名稱繁中
     * </pre>
     *
     * <code>string awayNameZht = 16;</code>
     */
    private void setAwayNameZhtBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      awayNameZht_ = value.toStringUtf8();
    }

    public static final int AWAYSCORE_FIELD_NUMBER = 17;
    private int awayScore_;
    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 17;</code>
     */
    @Override
    public int getAwayScore() {
      return awayScore_;
    }
    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 17;</code>
     */
    private void setAwayScore(int value) {
      
      awayScore_ = value;
    }
    /**
     * <pre>
     * 客隊全場得分
     * </pre>
     *
     * <code>int32 awayScore = 17;</code>
     */
    private void clearAwayScore() {
      
      awayScore_ = 0;
    }

    public static final int AWAYREDCARD_FIELD_NUMBER = 18;
    private int awayRedCard_;
    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 18;</code>
     */
    @Override
    public int getAwayRedCard() {
      return awayRedCard_;
    }
    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 18;</code>
     */
    private void setAwayRedCard(int value) {
      
      awayRedCard_ = value;
    }
    /**
     * <pre>
     * 客隊紅牌數量
     * </pre>
     *
     * <code>int32 awayRedCard = 18;</code>
     */
    private void clearAwayRedCard() {
      
      awayRedCard_ = 0;
    }

    public static final int AWAYYELLOWCARD_FIELD_NUMBER = 19;
    private int awayYellowCard_;
    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 19;</code>
     */
    @Override
    public int getAwayYellowCard() {
      return awayYellowCard_;
    }
    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 19;</code>
     */
    private void setAwayYellowCard(int value) {
      
      awayYellowCard_ = value;
    }
    /**
     * <pre>
     * 客隊黃牌數量
     * </pre>
     *
     * <code>int32 awayYellowCard = 19;</code>
     */
    private void clearAwayYellowCard() {
      
      awayYellowCard_ = 0;
    }

    public static final int AWAYCORNER_FIELD_NUMBER = 20;
    private int awayCorner_;
    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 20;</code>
     */
    @Override
    public int getAwayCorner() {
      return awayCorner_;
    }
    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 20;</code>
     */
    private void setAwayCorner(int value) {
      
      awayCorner_ = value;
    }
    /**
     * <pre>
     * 客隊角球數量
     * </pre>
     *
     * <code>int32 awayCorner = 20;</code>
     */
    private void clearAwayCorner() {
      
      awayCorner_ = 0;
    }

    public static GoalNotify parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GoalNotify parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GoalNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GoalNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GoalNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GoalNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GoalNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GoalNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GoalNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static GoalNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GoalNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GoalNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(GoalNotify prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code socketProtos.MatchInfo.GoalNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          GoalNotify, Builder> implements
        // @@protoc_insertion_point(builder_implements:socketProtos.MatchInfo.GoalNotify)
        GoalNotifyOrBuilder {
      // Construct using com.example.mvvm_navigation.protobuf.SocketMatchInfo.GoalNotify.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public int getCommandValue() {
        return instance.getCommandValue();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommandValue(int value) {
        copyOnWrite();
        instance.setCommandValue(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public Socket.Command getCommand() {
        return instance.getCommand();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommand(Socket.Command value) {
        copyOnWrite();
        instance.setCommand(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder clearCommand() {
        copyOnWrite();
        instance.clearCommand();
        return this;
      }

      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 2;</code>
       */
      @Override
      public int getMatchId() {
        return instance.getMatchId();
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 2;</code>
       */
      public Builder setMatchId(int value) {
        copyOnWrite();
        instance.setMatchId(value);
        return this;
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 2;</code>
       */
      public Builder clearMatchId() {
        copyOnWrite();
        instance.clearMatchId();
        return this;
      }

      /**
       * <pre>
       * 賽事狀態
       * </pre>
       *
       * <code>sint32 status = 3;</code>
       */
      @Override
      public int getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       * 賽事狀態
       * </pre>
       *
       * <code>sint32 status = 3;</code>
       */
      public Builder setStatus(int value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       * 賽事狀態
       * </pre>
       *
       * <code>sint32 status = 3;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      /**
       * <pre>
       * 通知事件類型 1:進球 2:紅牌 3:黃牌
       * </pre>
       *
       * <code>int32 type = 4;</code>
       */
      @Override
      public int getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * 通知事件類型 1:進球 2:紅牌 3:黃牌
       * </pre>
       *
       * <code>int32 type = 4;</code>
       */
      public Builder setType(int value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * 通知事件類型 1:進球 2:紅牌 3:黃牌
       * </pre>
       *
       * <code>int32 type = 4;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * 現在比賽進行的時間
       * </pre>
       *
       * <code>int32 runtime = 5;</code>
       */
      @Override
      public int getRuntime() {
        return instance.getRuntime();
      }
      /**
       * <pre>
       * 現在比賽進行的時間
       * </pre>
       *
       * <code>int32 runtime = 5;</code>
       */
      public Builder setRuntime(int value) {
        copyOnWrite();
        instance.setRuntime(value);
        return this;
      }
      /**
       * <pre>
       * 現在比賽進行的時間
       * </pre>
       *
       * <code>int32 runtime = 5;</code>
       */
      public Builder clearRuntime() {
        copyOnWrite();
        instance.clearRuntime();
        return this;
      }

      /**
       * <pre>
       * 通知事件方 1:主隊 2客隊
       * </pre>
       *
       * <code>int32 teamEvent = 6;</code>
       */
      @Override
      public int getTeamEvent() {
        return instance.getTeamEvent();
      }
      /**
       * <pre>
       * 通知事件方 1:主隊 2客隊
       * </pre>
       *
       * <code>int32 teamEvent = 6;</code>
       */
      public Builder setTeamEvent(int value) {
        copyOnWrite();
        instance.setTeamEvent(value);
        return this;
      }
      /**
       * <pre>
       * 通知事件方 1:主隊 2客隊
       * </pre>
       *
       * <code>int32 teamEvent = 6;</code>
       */
      public Builder clearTeamEvent() {
        copyOnWrite();
        instance.clearTeamEvent();
        return this;
      }

      /**
       * <pre>
       * 主隊名稱簡中
       * </pre>
       *
       * <code>string homeName = 7;</code>
       */
      @Override
      public String getHomeName() {
        return instance.getHomeName();
      }
      /**
       * <pre>
       * 主隊名稱簡中
       * </pre>
       *
       * <code>string homeName = 7;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getHomeNameBytes() {
        return instance.getHomeNameBytes();
      }
      /**
       * <pre>
       * 主隊名稱簡中
       * </pre>
       *
       * <code>string homeName = 7;</code>
       */
      public Builder setHomeName(
          String value) {
        copyOnWrite();
        instance.setHomeName(value);
        return this;
      }
      /**
       * <pre>
       * 主隊名稱簡中
       * </pre>
       *
       * <code>string homeName = 7;</code>
       */
      public Builder clearHomeName() {
        copyOnWrite();
        instance.clearHomeName();
        return this;
      }
      /**
       * <pre>
       * 主隊名稱簡中
       * </pre>
       *
       * <code>string homeName = 7;</code>
       */
      public Builder setHomeNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHomeNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * 主隊名稱英文
       * </pre>
       *
       * <code>string homeNameEn = 8;</code>
       */
      @Override
      public String getHomeNameEn() {
        return instance.getHomeNameEn();
      }
      /**
       * <pre>
       * 主隊名稱英文
       * </pre>
       *
       * <code>string homeNameEn = 8;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getHomeNameEnBytes() {
        return instance.getHomeNameEnBytes();
      }
      /**
       * <pre>
       * 主隊名稱英文
       * </pre>
       *
       * <code>string homeNameEn = 8;</code>
       */
      public Builder setHomeNameEn(
          String value) {
        copyOnWrite();
        instance.setHomeNameEn(value);
        return this;
      }
      /**
       * <pre>
       * 主隊名稱英文
       * </pre>
       *
       * <code>string homeNameEn = 8;</code>
       */
      public Builder clearHomeNameEn() {
        copyOnWrite();
        instance.clearHomeNameEn();
        return this;
      }
      /**
       * <pre>
       * 主隊名稱英文
       * </pre>
       *
       * <code>string homeNameEn = 8;</code>
       */
      public Builder setHomeNameEnBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHomeNameEnBytes(value);
        return this;
      }

      /**
       * <pre>
       * 主隊名稱繁中
       * </pre>
       *
       * <code>string homeNameZht = 9;</code>
       */
      @Override
      public String getHomeNameZht() {
        return instance.getHomeNameZht();
      }
      /**
       * <pre>
       * 主隊名稱繁中
       * </pre>
       *
       * <code>string homeNameZht = 9;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getHomeNameZhtBytes() {
        return instance.getHomeNameZhtBytes();
      }
      /**
       * <pre>
       * 主隊名稱繁中
       * </pre>
       *
       * <code>string homeNameZht = 9;</code>
       */
      public Builder setHomeNameZht(
          String value) {
        copyOnWrite();
        instance.setHomeNameZht(value);
        return this;
      }
      /**
       * <pre>
       * 主隊名稱繁中
       * </pre>
       *
       * <code>string homeNameZht = 9;</code>
       */
      public Builder clearHomeNameZht() {
        copyOnWrite();
        instance.clearHomeNameZht();
        return this;
      }
      /**
       * <pre>
       * 主隊名稱繁中
       * </pre>
       *
       * <code>string homeNameZht = 9;</code>
       */
      public Builder setHomeNameZhtBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHomeNameZhtBytes(value);
        return this;
      }

      /**
       * <pre>
       * 主隊全場得分
       * </pre>
       *
       * <code>int32 homeScore = 10;</code>
       */
      @Override
      public int getHomeScore() {
        return instance.getHomeScore();
      }
      /**
       * <pre>
       * 主隊全場得分
       * </pre>
       *
       * <code>int32 homeScore = 10;</code>
       */
      public Builder setHomeScore(int value) {
        copyOnWrite();
        instance.setHomeScore(value);
        return this;
      }
      /**
       * <pre>
       * 主隊全場得分
       * </pre>
       *
       * <code>int32 homeScore = 10;</code>
       */
      public Builder clearHomeScore() {
        copyOnWrite();
        instance.clearHomeScore();
        return this;
      }

      /**
       * <pre>
       * 主隊紅牌數量
       * </pre>
       *
       * <code>int32 homeRedCard = 11;</code>
       */
      @Override
      public int getHomeRedCard() {
        return instance.getHomeRedCard();
      }
      /**
       * <pre>
       * 主隊紅牌數量
       * </pre>
       *
       * <code>int32 homeRedCard = 11;</code>
       */
      public Builder setHomeRedCard(int value) {
        copyOnWrite();
        instance.setHomeRedCard(value);
        return this;
      }
      /**
       * <pre>
       * 主隊紅牌數量
       * </pre>
       *
       * <code>int32 homeRedCard = 11;</code>
       */
      public Builder clearHomeRedCard() {
        copyOnWrite();
        instance.clearHomeRedCard();
        return this;
      }

      /**
       * <pre>
       * 主隊黃牌數量
       * </pre>
       *
       * <code>int32 homeYellowCard = 12;</code>
       */
      @Override
      public int getHomeYellowCard() {
        return instance.getHomeYellowCard();
      }
      /**
       * <pre>
       * 主隊黃牌數量
       * </pre>
       *
       * <code>int32 homeYellowCard = 12;</code>
       */
      public Builder setHomeYellowCard(int value) {
        copyOnWrite();
        instance.setHomeYellowCard(value);
        return this;
      }
      /**
       * <pre>
       * 主隊黃牌數量
       * </pre>
       *
       * <code>int32 homeYellowCard = 12;</code>
       */
      public Builder clearHomeYellowCard() {
        copyOnWrite();
        instance.clearHomeYellowCard();
        return this;
      }

      /**
       * <pre>
       * 主隊角球數量
       * </pre>
       *
       * <code>int32 homeCorner = 13;</code>
       */
      @Override
      public int getHomeCorner() {
        return instance.getHomeCorner();
      }
      /**
       * <pre>
       * 主隊角球數量
       * </pre>
       *
       * <code>int32 homeCorner = 13;</code>
       */
      public Builder setHomeCorner(int value) {
        copyOnWrite();
        instance.setHomeCorner(value);
        return this;
      }
      /**
       * <pre>
       * 主隊角球數量
       * </pre>
       *
       * <code>int32 homeCorner = 13;</code>
       */
      public Builder clearHomeCorner() {
        copyOnWrite();
        instance.clearHomeCorner();
        return this;
      }

      /**
       * <pre>
       * 客隊名稱簡中
       * </pre>
       *
       * <code>string awayName = 14;</code>
       */
      @Override
      public String getAwayName() {
        return instance.getAwayName();
      }
      /**
       * <pre>
       * 客隊名稱簡中
       * </pre>
       *
       * <code>string awayName = 14;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getAwayNameBytes() {
        return instance.getAwayNameBytes();
      }
      /**
       * <pre>
       * 客隊名稱簡中
       * </pre>
       *
       * <code>string awayName = 14;</code>
       */
      public Builder setAwayName(
          String value) {
        copyOnWrite();
        instance.setAwayName(value);
        return this;
      }
      /**
       * <pre>
       * 客隊名稱簡中
       * </pre>
       *
       * <code>string awayName = 14;</code>
       */
      public Builder clearAwayName() {
        copyOnWrite();
        instance.clearAwayName();
        return this;
      }
      /**
       * <pre>
       * 客隊名稱簡中
       * </pre>
       *
       * <code>string awayName = 14;</code>
       */
      public Builder setAwayNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAwayNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * 客隊名稱英文
       * </pre>
       *
       * <code>string awayNameEn = 15;</code>
       */
      @Override
      public String getAwayNameEn() {
        return instance.getAwayNameEn();
      }
      /**
       * <pre>
       * 客隊名稱英文
       * </pre>
       *
       * <code>string awayNameEn = 15;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getAwayNameEnBytes() {
        return instance.getAwayNameEnBytes();
      }
      /**
       * <pre>
       * 客隊名稱英文
       * </pre>
       *
       * <code>string awayNameEn = 15;</code>
       */
      public Builder setAwayNameEn(
          String value) {
        copyOnWrite();
        instance.setAwayNameEn(value);
        return this;
      }
      /**
       * <pre>
       * 客隊名稱英文
       * </pre>
       *
       * <code>string awayNameEn = 15;</code>
       */
      public Builder clearAwayNameEn() {
        copyOnWrite();
        instance.clearAwayNameEn();
        return this;
      }
      /**
       * <pre>
       * 客隊名稱英文
       * </pre>
       *
       * <code>string awayNameEn = 15;</code>
       */
      public Builder setAwayNameEnBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAwayNameEnBytes(value);
        return this;
      }

      /**
       * <pre>
       * 客隊名稱繁中
       * </pre>
       *
       * <code>string awayNameZht = 16;</code>
       */
      @Override
      public String getAwayNameZht() {
        return instance.getAwayNameZht();
      }
      /**
       * <pre>
       * 客隊名稱繁中
       * </pre>
       *
       * <code>string awayNameZht = 16;</code>
       */
      @Override
      public com.google.protobuf.ByteString
          getAwayNameZhtBytes() {
        return instance.getAwayNameZhtBytes();
      }
      /**
       * <pre>
       * 客隊名稱繁中
       * </pre>
       *
       * <code>string awayNameZht = 16;</code>
       */
      public Builder setAwayNameZht(
          String value) {
        copyOnWrite();
        instance.setAwayNameZht(value);
        return this;
      }
      /**
       * <pre>
       * 客隊名稱繁中
       * </pre>
       *
       * <code>string awayNameZht = 16;</code>
       */
      public Builder clearAwayNameZht() {
        copyOnWrite();
        instance.clearAwayNameZht();
        return this;
      }
      /**
       * <pre>
       * 客隊名稱繁中
       * </pre>
       *
       * <code>string awayNameZht = 16;</code>
       */
      public Builder setAwayNameZhtBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAwayNameZhtBytes(value);
        return this;
      }

      /**
       * <pre>
       * 客隊全場得分
       * </pre>
       *
       * <code>int32 awayScore = 17;</code>
       */
      @Override
      public int getAwayScore() {
        return instance.getAwayScore();
      }
      /**
       * <pre>
       * 客隊全場得分
       * </pre>
       *
       * <code>int32 awayScore = 17;</code>
       */
      public Builder setAwayScore(int value) {
        copyOnWrite();
        instance.setAwayScore(value);
        return this;
      }
      /**
       * <pre>
       * 客隊全場得分
       * </pre>
       *
       * <code>int32 awayScore = 17;</code>
       */
      public Builder clearAwayScore() {
        copyOnWrite();
        instance.clearAwayScore();
        return this;
      }

      /**
       * <pre>
       * 客隊紅牌數量
       * </pre>
       *
       * <code>int32 awayRedCard = 18;</code>
       */
      @Override
      public int getAwayRedCard() {
        return instance.getAwayRedCard();
      }
      /**
       * <pre>
       * 客隊紅牌數量
       * </pre>
       *
       * <code>int32 awayRedCard = 18;</code>
       */
      public Builder setAwayRedCard(int value) {
        copyOnWrite();
        instance.setAwayRedCard(value);
        return this;
      }
      /**
       * <pre>
       * 客隊紅牌數量
       * </pre>
       *
       * <code>int32 awayRedCard = 18;</code>
       */
      public Builder clearAwayRedCard() {
        copyOnWrite();
        instance.clearAwayRedCard();
        return this;
      }

      /**
       * <pre>
       * 客隊黃牌數量
       * </pre>
       *
       * <code>int32 awayYellowCard = 19;</code>
       */
      @Override
      public int getAwayYellowCard() {
        return instance.getAwayYellowCard();
      }
      /**
       * <pre>
       * 客隊黃牌數量
       * </pre>
       *
       * <code>int32 awayYellowCard = 19;</code>
       */
      public Builder setAwayYellowCard(int value) {
        copyOnWrite();
        instance.setAwayYellowCard(value);
        return this;
      }
      /**
       * <pre>
       * 客隊黃牌數量
       * </pre>
       *
       * <code>int32 awayYellowCard = 19;</code>
       */
      public Builder clearAwayYellowCard() {
        copyOnWrite();
        instance.clearAwayYellowCard();
        return this;
      }

      /**
       * <pre>
       * 客隊角球數量
       * </pre>
       *
       * <code>int32 awayCorner = 20;</code>
       */
      @Override
      public int getAwayCorner() {
        return instance.getAwayCorner();
      }
      /**
       * <pre>
       * 客隊角球數量
       * </pre>
       *
       * <code>int32 awayCorner = 20;</code>
       */
      public Builder setAwayCorner(int value) {
        copyOnWrite();
        instance.setAwayCorner(value);
        return this;
      }
      /**
       * <pre>
       * 客隊角球數量
       * </pre>
       *
       * <code>int32 awayCorner = 20;</code>
       */
      public Builder clearAwayCorner() {
        copyOnWrite();
        instance.clearAwayCorner();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:socketProtos.MatchInfo.GoalNotify)
    }
    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new GoalNotify();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            Object[] objects = new Object[] {
              "command_",
              "matchId_",
              "status_",
              "type_",
              "runtime_",
              "teamEvent_",
              "homeName_",
              "homeNameEn_",
              "homeNameZht_",
              "homeScore_",
              "homeRedCard_",
              "homeYellowCard_",
              "homeCorner_",
              "awayName_",
              "awayNameEn_",
              "awayNameZht_",
              "awayScore_",
              "awayRedCard_",
              "awayYellowCard_",
              "awayCorner_",
            };
            String info =
                "\u0000\u0014\u0000\u0000\u0001\u0014\u0014\u0000\u0000\u0000\u0001\f\u0002\u0004" +
                "\u0003\u000f\u0004\u0004\u0005\u0004\u0006\u0004\u0007\u0208\b\u0208\t\u0208\n\u0004" +
                "\u000b\u0004\f\u0004\r\u0004\u000e\u0208\u000f\u0208\u0010\u0208\u0011\u0004\u0012" +
                "\u0004\u0013\u0004\u0014\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<GoalNotify> parser = PARSER;
          if (parser == null) {
            synchronized (GoalNotify.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:socketProtos.MatchInfo.GoalNotify)
    private static final GoalNotify DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new GoalNotify();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GoalNotify.class, DEFAULT_INSTANCE);
    }
    public static GoalNotify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GoalNotify> PARSER;

    public static com.google.protobuf.Parser<GoalNotify> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DeleteMatchesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:socketProtos.MatchInfo.DeleteMatches)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    int getCommandValue();
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    Socket.Command getCommand();

    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    java.util.List<Integer> getMatchIdsList();
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    int getMatchIdsCount();
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    int getMatchIds(int index);
  }
  /**
   * Protobuf type {@code socketProtos.MatchInfo.DeleteMatches}
   */
  public  static final class DeleteMatches extends
      com.google.protobuf.GeneratedMessageLite<
          DeleteMatches, DeleteMatches.Builder> implements
      // @@protoc_insertion_point(message_implements:socketProtos.MatchInfo.DeleteMatches)
      DeleteMatchesOrBuilder {
    private DeleteMatches() {
      matchIds_ = emptyIntList();
    }
    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_;
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public int getCommandValue() {
      return command_;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public Socket.Command getCommand() {
      Socket.Command result = Socket.Command.forNumber(command_);
      return result == null ? Socket.Command.UNRECOGNIZED : result;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommandValue(int value) {
        command_ = value;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommand(Socket.Command value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      command_ = value.getNumber();
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void clearCommand() {
      
      command_ = 0;
    }

    public static final int MATCHIDS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList matchIds_;
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    @Override
    public java.util.List<Integer>
        getMatchIdsList() {
      return matchIds_;
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    @Override
    public int getMatchIdsCount() {
      return matchIds_.size();
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    @Override
    public int getMatchIds(int index) {
      return matchIds_.getInt(index);
    }
    private int matchIdsMemoizedSerializedSize = -1;
    private void ensureMatchIdsIsMutable() {
      if (!matchIds_.isModifiable()) {
        matchIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(matchIds_);
       }
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    private void setMatchIds(
        int index, int value) {
      ensureMatchIdsIsMutable();
      matchIds_.setInt(index, value);
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    private void addMatchIds(int value) {
      ensureMatchIdsIsMutable();
      matchIds_.addInt(value);
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    private void addAllMatchIds(
        Iterable<? extends Integer> values) {
      ensureMatchIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, matchIds_);
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>repeated int32 matchIds = 2;</code>
     */
    private void clearMatchIds() {
      matchIds_ = emptyIntList();
    }

    public static DeleteMatches parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static DeleteMatches parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static DeleteMatches parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static DeleteMatches parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static DeleteMatches parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static DeleteMatches parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static DeleteMatches parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static DeleteMatches parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static DeleteMatches parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static DeleteMatches parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static DeleteMatches parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static DeleteMatches parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(DeleteMatches prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code socketProtos.MatchInfo.DeleteMatches}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          DeleteMatches, Builder> implements
        // @@protoc_insertion_point(builder_implements:socketProtos.MatchInfo.DeleteMatches)
        DeleteMatchesOrBuilder {
      // Construct using com.example.mvvm_navigation.protobuf.SocketMatchInfo.DeleteMatches.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public int getCommandValue() {
        return instance.getCommandValue();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommandValue(int value) {
        copyOnWrite();
        instance.setCommandValue(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public Socket.Command getCommand() {
        return instance.getCommand();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommand(Socket.Command value) {
        copyOnWrite();
        instance.setCommand(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder clearCommand() {
        copyOnWrite();
        instance.clearCommand();
        return this;
      }

      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>repeated int32 matchIds = 2;</code>
       */
      @Override
      public java.util.List<Integer>
          getMatchIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMatchIdsList());
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>repeated int32 matchIds = 2;</code>
       */
      @Override
      public int getMatchIdsCount() {
        return instance.getMatchIdsCount();
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>repeated int32 matchIds = 2;</code>
       */
      @Override
      public int getMatchIds(int index) {
        return instance.getMatchIds(index);
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>repeated int32 matchIds = 2;</code>
       */
      public Builder setMatchIds(
          int index, int value) {
        copyOnWrite();
        instance.setMatchIds(index, value);
        return this;
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>repeated int32 matchIds = 2;</code>
       */
      public Builder addMatchIds(int value) {
        copyOnWrite();
        instance.addMatchIds(value);
        return this;
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>repeated int32 matchIds = 2;</code>
       */
      public Builder addAllMatchIds(
          Iterable<? extends Integer> values) {
        copyOnWrite();
        instance.addAllMatchIds(values);
        return this;
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>repeated int32 matchIds = 2;</code>
       */
      public Builder clearMatchIds() {
        copyOnWrite();
        instance.clearMatchIds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:socketProtos.MatchInfo.DeleteMatches)
    }
    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new DeleteMatches();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            Object[] objects = new Object[] {
              "command_",
              "matchIds_",
            };
            String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\f\u0002\'";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<DeleteMatches> parser = PARSER;
          if (parser == null) {
            synchronized (DeleteMatches.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:socketProtos.MatchInfo.DeleteMatches)
    private static final DeleteMatches DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new DeleteMatches();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DeleteMatches.class, DEFAULT_INSTANCE);
    }
    public static DeleteMatches getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeleteMatches> PARSER;

    public static com.google.protobuf.Parser<DeleteMatches> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface OpenDateChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:socketProtos.MatchInfo.OpenDateChange)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    int getCommandValue();
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    Socket.Command getCommand();

    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    java.util.List<ChangeItem>
        getChangeListList();
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    ChangeItem getChangeList(int index);
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    int getChangeListCount();
  }
  /**
   * Protobuf type {@code socketProtos.MatchInfo.OpenDateChange}
   */
  public  static final class OpenDateChange extends
      com.google.protobuf.GeneratedMessageLite<
          OpenDateChange, OpenDateChange.Builder> implements
      // @@protoc_insertion_point(message_implements:socketProtos.MatchInfo.OpenDateChange)
      OpenDateChangeOrBuilder {
    private OpenDateChange() {
      changeList_ = emptyProtobufList();
    }
    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_;
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public int getCommandValue() {
      return command_;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    @Override
    public Socket.Command getCommand() {
      Socket.Command result = Socket.Command.forNumber(command_);
      return result == null ? Socket.Command.UNRECOGNIZED : result;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommandValue(int value) {
        command_ = value;
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void setCommand(Socket.Command value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      command_ = value.getNumber();
    }
    /**
     * <code>.socketProtos.command.Command command = 1;</code>
     */
    private void clearCommand() {
      
      command_ = 0;
    }

    public static final int CHANGELIST_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<ChangeItem> changeList_;
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    @Override
    public java.util.List<ChangeItem> getChangeListList() {
      return changeList_;
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    public java.util.List<? extends ChangeItemOrBuilder>
        getChangeListOrBuilderList() {
      return changeList_;
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    @Override
    public int getChangeListCount() {
      return changeList_.size();
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    @Override
    public ChangeItem getChangeList(int index) {
      return changeList_.get(index);
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    public ChangeItemOrBuilder getChangeListOrBuilder(
        int index) {
      return changeList_.get(index);
    }
    private void ensureChangeListIsMutable() {
      if (!changeList_.isModifiable()) {
        changeList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(changeList_);
       }
    }

    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void setChangeList(
        int index, ChangeItem value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChangeListIsMutable();
      changeList_.set(index, value);
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void setChangeList(
        int index, ChangeItem.Builder builderForValue) {
      ensureChangeListIsMutable();
      changeList_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void addChangeList(ChangeItem value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChangeListIsMutable();
      changeList_.add(value);
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void addChangeList(
        int index, ChangeItem value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChangeListIsMutable();
      changeList_.add(index, value);
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void addChangeList(
        ChangeItem.Builder builderForValue) {
      ensureChangeListIsMutable();
      changeList_.add(builderForValue.build());
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void addChangeList(
        int index, ChangeItem.Builder builderForValue) {
      ensureChangeListIsMutable();
      changeList_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void addAllChangeList(
        Iterable<? extends ChangeItem> values) {
      ensureChangeListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, changeList_);
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void clearChangeList() {
      changeList_ = emptyProtobufList();
    }
    /**
     * <pre>
     * 變動列表
     * </pre>
     *
     * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
     */
    private void removeChangeList(int index) {
      ensureChangeListIsMutable();
      changeList_.remove(index);
    }

    public static OpenDateChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static OpenDateChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static OpenDateChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static OpenDateChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static OpenDateChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static OpenDateChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static OpenDateChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static OpenDateChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static OpenDateChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static OpenDateChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static OpenDateChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static OpenDateChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(OpenDateChange prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code socketProtos.MatchInfo.OpenDateChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          OpenDateChange, Builder> implements
        // @@protoc_insertion_point(builder_implements:socketProtos.MatchInfo.OpenDateChange)
        OpenDateChangeOrBuilder {
      // Construct using com.example.mvvm_navigation.protobuf.SocketMatchInfo.OpenDateChange.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public int getCommandValue() {
        return instance.getCommandValue();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommandValue(int value) {
        copyOnWrite();
        instance.setCommandValue(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      @Override
      public Socket.Command getCommand() {
        return instance.getCommand();
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder setCommand(Socket.Command value) {
        copyOnWrite();
        instance.setCommand(value);
        return this;
      }
      /**
       * <code>.socketProtos.command.Command command = 1;</code>
       */
      public Builder clearCommand() {
        copyOnWrite();
        instance.clearCommand();
        return this;
      }

      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      @Override
      public java.util.List<ChangeItem> getChangeListList() {
        return java.util.Collections.unmodifiableList(
            instance.getChangeListList());
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      @Override
      public int getChangeListCount() {
        return instance.getChangeListCount();
      }/**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      @Override
      public ChangeItem getChangeList(int index) {
        return instance.getChangeList(index);
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder setChangeList(
          int index, ChangeItem value) {
        copyOnWrite();
        instance.setChangeList(index, value);
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder setChangeList(
          int index, ChangeItem.Builder builderForValue) {
        copyOnWrite();
        instance.setChangeList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder addChangeList(ChangeItem value) {
        copyOnWrite();
        instance.addChangeList(value);
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder addChangeList(
          int index, ChangeItem value) {
        copyOnWrite();
        instance.addChangeList(index, value);
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder addChangeList(
          ChangeItem.Builder builderForValue) {
        copyOnWrite();
        instance.addChangeList(builderForValue);
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder addChangeList(
          int index, ChangeItem.Builder builderForValue) {
        copyOnWrite();
        instance.addChangeList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder addAllChangeList(
          Iterable<? extends ChangeItem> values) {
        copyOnWrite();
        instance.addAllChangeList(values);
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder clearChangeList() {
        copyOnWrite();
        instance.clearChangeList();
        return this;
      }
      /**
       * <pre>
       * 變動列表
       * </pre>
       *
       * <code>repeated .socketProtos.MatchInfo.ChangeItem changeList = 2;</code>
       */
      public Builder removeChangeList(int index) {
        copyOnWrite();
        instance.removeChangeList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:socketProtos.MatchInfo.OpenDateChange)
    }
    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new OpenDateChange();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            Object[] objects = new Object[] {
              "command_",
              "changeList_",
              ChangeItem.class,
            };
            String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\f\u0002\u001b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<OpenDateChange> parser = PARSER;
          if (parser == null) {
            synchronized (OpenDateChange.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:socketProtos.MatchInfo.OpenDateChange)
    private static final OpenDateChange DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new OpenDateChange();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        OpenDateChange.class, DEFAULT_INSTANCE);
    }
    public static OpenDateChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OpenDateChange> PARSER;

    public static com.google.protobuf.Parser<OpenDateChange> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChangeItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:socketProtos.MatchInfo.ChangeItem)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    int getMatchId();

    /**
     * <pre>
     * 原本時間
     * </pre>
     *
     * <code>int32 initialOpenDate = 2;</code>
     */
    int getInitialOpenDate();

    /**
     * <pre>
     * 變動時間
     * </pre>
     *
     * <code>int32 changeOpenDate = 3;</code>
     */
    int getChangeOpenDate();
  }
  /**
   * Protobuf type {@code socketProtos.MatchInfo.ChangeItem}
   */
  public  static final class ChangeItem extends
      com.google.protobuf.GeneratedMessageLite<
          ChangeItem, ChangeItem.Builder> implements
      // @@protoc_insertion_point(message_implements:socketProtos.MatchInfo.ChangeItem)
      ChangeItemOrBuilder {
    private ChangeItem() {
    }
    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    @Override
    public int getMatchId() {
      return matchId_;
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    private void setMatchId(int value) {
      
      matchId_ = value;
    }
    /**
     * <pre>
     * 賽事id
     * </pre>
     *
     * <code>int32 matchId = 1;</code>
     */
    private void clearMatchId() {
      
      matchId_ = 0;
    }

    public static final int INITIALOPENDATE_FIELD_NUMBER = 2;
    private int initialOpenDate_;
    /**
     * <pre>
     * 原本時間
     * </pre>
     *
     * <code>int32 initialOpenDate = 2;</code>
     */
    @Override
    public int getInitialOpenDate() {
      return initialOpenDate_;
    }
    /**
     * <pre>
     * 原本時間
     * </pre>
     *
     * <code>int32 initialOpenDate = 2;</code>
     */
    private void setInitialOpenDate(int value) {
      
      initialOpenDate_ = value;
    }
    /**
     * <pre>
     * 原本時間
     * </pre>
     *
     * <code>int32 initialOpenDate = 2;</code>
     */
    private void clearInitialOpenDate() {
      
      initialOpenDate_ = 0;
    }

    public static final int CHANGEOPENDATE_FIELD_NUMBER = 3;
    private int changeOpenDate_;
    /**
     * <pre>
     * 變動時間
     * </pre>
     *
     * <code>int32 changeOpenDate = 3;</code>
     */
    @Override
    public int getChangeOpenDate() {
      return changeOpenDate_;
    }
    /**
     * <pre>
     * 變動時間
     * </pre>
     *
     * <code>int32 changeOpenDate = 3;</code>
     */
    private void setChangeOpenDate(int value) {
      
      changeOpenDate_ = value;
    }
    /**
     * <pre>
     * 變動時間
     * </pre>
     *
     * <code>int32 changeOpenDate = 3;</code>
     */
    private void clearChangeOpenDate() {
      
      changeOpenDate_ = 0;
    }

    public static ChangeItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static ChangeItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static ChangeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static ChangeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static ChangeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static ChangeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static ChangeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static ChangeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static ChangeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static ChangeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static ChangeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static ChangeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(ChangeItem prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code socketProtos.MatchInfo.ChangeItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ChangeItem, Builder> implements
        // @@protoc_insertion_point(builder_implements:socketProtos.MatchInfo.ChangeItem)
        ChangeItemOrBuilder {
      // Construct using com.example.mvvm_navigation.protobuf.SocketMatchInfo.ChangeItem.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      @Override
      public int getMatchId() {
        return instance.getMatchId();
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder setMatchId(int value) {
        copyOnWrite();
        instance.setMatchId(value);
        return this;
      }
      /**
       * <pre>
       * 賽事id
       * </pre>
       *
       * <code>int32 matchId = 1;</code>
       */
      public Builder clearMatchId() {
        copyOnWrite();
        instance.clearMatchId();
        return this;
      }

      /**
       * <pre>
       * 原本時間
       * </pre>
       *
       * <code>int32 initialOpenDate = 2;</code>
       */
      @Override
      public int getInitialOpenDate() {
        return instance.getInitialOpenDate();
      }
      /**
       * <pre>
       * 原本時間
       * </pre>
       *
       * <code>int32 initialOpenDate = 2;</code>
       */
      public Builder setInitialOpenDate(int value) {
        copyOnWrite();
        instance.setInitialOpenDate(value);
        return this;
      }
      /**
       * <pre>
       * 原本時間
       * </pre>
       *
       * <code>int32 initialOpenDate = 2;</code>
       */
      public Builder clearInitialOpenDate() {
        copyOnWrite();
        instance.clearInitialOpenDate();
        return this;
      }

      /**
       * <pre>
       * 變動時間
       * </pre>
       *
       * <code>int32 changeOpenDate = 3;</code>
       */
      @Override
      public int getChangeOpenDate() {
        return instance.getChangeOpenDate();
      }
      /**
       * <pre>
       * 變動時間
       * </pre>
       *
       * <code>int32 changeOpenDate = 3;</code>
       */
      public Builder setChangeOpenDate(int value) {
        copyOnWrite();
        instance.setChangeOpenDate(value);
        return this;
      }
      /**
       * <pre>
       * 變動時間
       * </pre>
       *
       * <code>int32 changeOpenDate = 3;</code>
       */
      public Builder clearChangeOpenDate() {
        copyOnWrite();
        instance.clearChangeOpenDate();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:socketProtos.MatchInfo.ChangeItem)
    }
    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new ChangeItem();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            Object[] objects = new Object[] {
              "matchId_",
              "initialOpenDate_",
              "changeOpenDate_",
            };
            String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0004\u0002\u0004" +
                "\u0003\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<ChangeItem> parser = PARSER;
          if (parser == null) {
            synchronized (ChangeItem.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:socketProtos.MatchInfo.ChangeItem)
    private static final ChangeItem DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ChangeItem();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChangeItem.class, DEFAULT_INSTANCE);
    }
    public static ChangeItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChangeItem> PARSER;

    public static com.google.protobuf.Parser<ChangeItem> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
